// Ogonek
//
// Written in 2012-2013 by Martinho Fernandes <martinho.fernandes@gmail.com>
//
// To the extent possible under law, the author(s) have dedicated all copyright and related
// and neighboring rights to this software to the public domain worldwide. This software is
// distributed without any warranty.
//
// You should have received a copy of the CC0 Public Domain Dedication along with this software.
// If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.

// ISO-8859-1 encoding form

#ifndef OGONEK_ENCODING_LATIN1_HPP
#define OGONEK_ENCODING_LATIN1_HPP

#include <ogonek/encoding/codepage_encoding.h++>
#include <ogonek/types.h++>
#include <ogonek/validation.h++>
#include <ogonek/detail/partial_array.h++>

#include <wheels/meta.h++>

#include <boost/range/iterator_range.hpp>
#include <boost/range/sub_range.hpp>
#include <boost/range/begin.hpp>
#include <boost/range/end.hpp>
#include <boost/range/empty.hpp>

#include <array>
#include <utility>

namespace ogonek {
    struct latin1_codepage {
        static code_point to_unicode[256];
        static codepage_entry from_unicode[256];
    };
    code_point latin1_codepage::to_unicode[256] = {
        0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,
        0x0008, 0x0009, 0x000a, 0x000b, 0x000c, 0x000d, 0x000e, 0x000f,
        0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017,
        0x0018, 0x0019, 0x001a, 0x001b, 0x001c, 0x001d, 0x001e, 0x001f,
        0x0020, 0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027,
        0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d, 0x002e, 0x002f,
        0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037,
        0x0038, 0x0039, 0x003a, 0x003b, 0x003c, 0x003d, 0x003e, 0x003f,
        0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,
        0x0048, 0x0049, 0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f,
        0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057,
        0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e, 0x005f,
        0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067,
        0x0068, 0x0069, 0x006a, 0x006b, 0x006c, 0x006d, 0x006e, 0x006f,
        0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077,
        0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x007f,
        0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x0085, 0x0086, 0x0087,
        0x0088, 0x0089, 0x008a, 0x008b, 0x008c, 0x008d, 0x008e, 0x008f,
        0x0090, 0x0091, 0x0092, 0x0093, 0x0094, 0x0095, 0x0096, 0x0097,
        0x0098, 0x0099, 0x009a, 0x009b, 0x009c, 0x009d, 0x009e, 0x009f,
        0x00a0, 0x00a1, 0x00a2, 0x00a3, 0x00a4, 0x00a5, 0x00a6, 0x00a7,
        0x00a8, 0x00a9, 0x00aa, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x00af,
        0x00b0, 0x00b1, 0x00b2, 0x00b3, 0x00b4, 0x00b5, 0x00b6, 0x00b7,
        0x00b8, 0x00b9, 0x00ba, 0x00bb, 0x00bc, 0x00bd, 0x00be, 0x00bf,
        0x00c0, 0x00c1, 0x00c2, 0x00c3, 0x00c4, 0x00c5, 0x00c6, 0x00c7,
        0x00c8, 0x00c9, 0x00ca, 0x00cb, 0x00cc, 0x00cd, 0x00ce, 0x00cf,
        0x00d0, 0x00d1, 0x00d2, 0x00d3, 0x00d4, 0x00d5, 0x00d6, 0x00d7,
        0x00d8, 0x00d9, 0x00da, 0x00db, 0x00dc, 0x00dd, 0x00de, 0x00df,
        0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x00e4, 0x00e5, 0x00e6, 0x00e7,
        0x00e8, 0x00e9, 0x00ea, 0x00eb, 0x00ec, 0x00ed, 0x00ee, 0x00ef,
        0x00f0, 0x00f1, 0x00f2, 0x00f3, 0x00f4, 0x00f5, 0x00f6, 0x00f7,
        0x00f8, 0x00f9, 0x00fa, 0x00fb, 0x00fc, 0x00fd, 0x00fe, 0x00ff,
    };
    codepage_entry latin1_codepage::from_unicode[256] = {
        { char(0x00), 0x0000 }, { char(0x01), 0x0001 }, { char(0x02), 0x0002 }, { char(0x03), 0x0003 }, { char(0x04), 0x0004 }, { char(0x05), 0x0005 }, { char(0x06), 0x0006 }, { char(0x07), 0x0007 },
        { char(0x08), 0x0008 }, { char(0x09), 0x0009 }, { char(0x0a), 0x000a }, { char(0x0b), 0x000b }, { char(0x0c), 0x000c }, { char(0x0d), 0x000d }, { char(0x0e), 0x000e }, { char(0x0f), 0x000f },
        { char(0x10), 0x0010 }, { char(0x11), 0x0011 }, { char(0x12), 0x0012 }, { char(0x13), 0x0013 }, { char(0x14), 0x0014 }, { char(0x15), 0x0015 }, { char(0x16), 0x0016 }, { char(0x17), 0x0017 },
        { char(0x18), 0x0018 }, { char(0x19), 0x0019 }, { char(0x1a), 0x001a }, { char(0x1b), 0x001b }, { char(0x1c), 0x001c }, { char(0x1d), 0x001d }, { char(0x1e), 0x001e }, { char(0x1f), 0x001f },
        { char(0x20), 0x0020 }, { char(0x21), 0x0021 }, { char(0x22), 0x0022 }, { char(0x23), 0x0023 }, { char(0x24), 0x0024 }, { char(0x25), 0x0025 }, { char(0x26), 0x0026 }, { char(0x27), 0x0027 },
        { char(0x28), 0x0028 }, { char(0x29), 0x0029 }, { char(0x2a), 0x002a }, { char(0x2b), 0x002b }, { char(0x2c), 0x002c }, { char(0x2d), 0x002d }, { char(0x2e), 0x002e }, { char(0x2f), 0x002f },
        { char(0x30), 0x0030 }, { char(0x31), 0x0031 }, { char(0x32), 0x0032 }, { char(0x33), 0x0033 }, { char(0x34), 0x0034 }, { char(0x35), 0x0035 }, { char(0x36), 0x0036 }, { char(0x37), 0x0037 },
        { char(0x38), 0x0038 }, { char(0x39), 0x0039 }, { char(0x3a), 0x003a }, { char(0x3b), 0x003b }, { char(0x3c), 0x003c }, { char(0x3d), 0x003d }, { char(0x3e), 0x003e }, { char(0x3f), 0x003f },
        { char(0x40), 0x0040 }, { char(0x41), 0x0041 }, { char(0x42), 0x0042 }, { char(0x43), 0x0043 }, { char(0x44), 0x0044 }, { char(0x45), 0x0045 }, { char(0x46), 0x0046 }, { char(0x47), 0x0047 },
        { char(0x48), 0x0048 }, { char(0x49), 0x0049 }, { char(0x4a), 0x004a }, { char(0x4b), 0x004b }, { char(0x4c), 0x004c }, { char(0x4d), 0x004d }, { char(0x4e), 0x004e }, { char(0x4f), 0x004f },
        { char(0x50), 0x0050 }, { char(0x51), 0x0051 }, { char(0x52), 0x0052 }, { char(0x53), 0x0053 }, { char(0x54), 0x0054 }, { char(0x55), 0x0055 }, { char(0x56), 0x0056 }, { char(0x57), 0x0057 },
        { char(0x58), 0x0058 }, { char(0x59), 0x0059 }, { char(0x5a), 0x005a }, { char(0x5b), 0x005b }, { char(0x5c), 0x005c }, { char(0x5d), 0x005d }, { char(0x5e), 0x005e }, { char(0x5f), 0x005f },
        { char(0x60), 0x0060 }, { char(0x61), 0x0061 }, { char(0x62), 0x0062 }, { char(0x63), 0x0063 }, { char(0x64), 0x0064 }, { char(0x65), 0x0065 }, { char(0x66), 0x0066 }, { char(0x67), 0x0067 },
        { char(0x68), 0x0068 }, { char(0x69), 0x0069 }, { char(0x6a), 0x006a }, { char(0x6b), 0x006b }, { char(0x6c), 0x006c }, { char(0x6d), 0x006d }, { char(0x6e), 0x006e }, { char(0x6f), 0x006f },
        { char(0x70), 0x0070 }, { char(0x71), 0x0071 }, { char(0x72), 0x0072 }, { char(0x73), 0x0073 }, { char(0x74), 0x0074 }, { char(0x75), 0x0075 }, { char(0x76), 0x0076 }, { char(0x77), 0x0077 },
        { char(0x78), 0x0078 }, { char(0x79), 0x0079 }, { char(0x7a), 0x007a }, { char(0x7b), 0x007b }, { char(0x7c), 0x007c }, { char(0x7d), 0x007d }, { char(0x7e), 0x007e }, { char(0x7f), 0x007f },
        { char(0x80), 0x0080 }, { char(0x81), 0x0081 }, { char(0x82), 0x0082 }, { char(0x83), 0x0083 }, { char(0x84), 0x0084 }, { char(0x85), 0x0085 }, { char(0x86), 0x0086 }, { char(0x87), 0x0087 },
        { char(0x88), 0x0088 }, { char(0x89), 0x0089 }, { char(0x8a), 0x008a }, { char(0x8b), 0x008b }, { char(0x8c), 0x008c }, { char(0x8d), 0x008d }, { char(0x8e), 0x008e }, { char(0x8f), 0x008f },
        { char(0x90), 0x0090 }, { char(0x91), 0x0091 }, { char(0x92), 0x0092 }, { char(0x93), 0x0093 }, { char(0x94), 0x0094 }, { char(0x95), 0x0095 }, { char(0x96), 0x0096 }, { char(0x97), 0x0097 },
        { char(0x98), 0x0098 }, { char(0x99), 0x0099 }, { char(0x9a), 0x009a }, { char(0x9b), 0x009b }, { char(0x9c), 0x009c }, { char(0x9d), 0x009d }, { char(0x9e), 0x009e }, { char(0x9f), 0x009f },
        { char(0xa0), 0x00a0 }, { char(0xa1), 0x00a1 }, { char(0xa2), 0x00a2 }, { char(0xa3), 0x00a3 }, { char(0xa4), 0x00a4 }, { char(0xa5), 0x00a5 }, { char(0xa6), 0x00a6 }, { char(0xa7), 0x00a7 },
        { char(0xa8), 0x00a8 }, { char(0xa9), 0x00a9 }, { char(0xaa), 0x00aa }, { char(0xab), 0x00ab }, { char(0xac), 0x00ac }, { char(0xad), 0x00ad }, { char(0xae), 0x00ae }, { char(0xaf), 0x00af },
        { char(0xb0), 0x00b0 }, { char(0xb1), 0x00b1 }, { char(0xb2), 0x00b2 }, { char(0xb3), 0x00b3 }, { char(0xb4), 0x00b4 }, { char(0xb5), 0x00b5 }, { char(0xb6), 0x00b6 }, { char(0xb7), 0x00b7 },
        { char(0xb8), 0x00b8 }, { char(0xb9), 0x00b9 }, { char(0xba), 0x00ba }, { char(0xbb), 0x00bb }, { char(0xbc), 0x00bc }, { char(0xbd), 0x00bd }, { char(0xbe), 0x00be }, { char(0xbf), 0x00bf },
        { char(0xc0), 0x00c0 }, { char(0xc1), 0x00c1 }, { char(0xc2), 0x00c2 }, { char(0xc3), 0x00c3 }, { char(0xc4), 0x00c4 }, { char(0xc5), 0x00c5 }, { char(0xc6), 0x00c6 }, { char(0xc7), 0x00c7 },
        { char(0xc8), 0x00c8 }, { char(0xc9), 0x00c9 }, { char(0xca), 0x00ca }, { char(0xcb), 0x00cb }, { char(0xcc), 0x00cc }, { char(0xcd), 0x00cd }, { char(0xce), 0x00ce }, { char(0xcf), 0x00cf },
        { char(0xd0), 0x00d0 }, { char(0xd1), 0x00d1 }, { char(0xd2), 0x00d2 }, { char(0xd3), 0x00d3 }, { char(0xd4), 0x00d4 }, { char(0xd5), 0x00d5 }, { char(0xd6), 0x00d6 }, { char(0xd7), 0x00d7 },
        { char(0xd8), 0x00d8 }, { char(0xd9), 0x00d9 }, { char(0xda), 0x00da }, { char(0xdb), 0x00db }, { char(0xdc), 0x00dc }, { char(0xdd), 0x00dd }, { char(0xde), 0x00de }, { char(0xdf), 0x00df },
        { char(0xe0), 0x00e0 }, { char(0xe1), 0x00e1 }, { char(0xe2), 0x00e2 }, { char(0xe3), 0x00e3 }, { char(0xe4), 0x00e4 }, { char(0xe5), 0x00e5 }, { char(0xe6), 0x00e6 }, { char(0xe7), 0x00e7 },
        { char(0xe8), 0x00e8 }, { char(0xe9), 0x00e9 }, { char(0xea), 0x00ea }, { char(0xeb), 0x00eb }, { char(0xec), 0x00ec }, { char(0xed), 0x00ed }, { char(0xee), 0x00ee }, { char(0xef), 0x00ef },
        { char(0xf0), 0x00f0 }, { char(0xf1), 0x00f1 }, { char(0xf2), 0x00f2 }, { char(0xf3), 0x00f3 }, { char(0xf4), 0x00f4 }, { char(0xf5), 0x00f5 }, { char(0xf6), 0x00f6 }, { char(0xf7), 0x00f7 },
        { char(0xf8), 0x00f8 }, { char(0xf9), 0x00f9 }, { char(0xfa), 0x00fa }, { char(0xfb), 0x00fb }, { char(0xfc), 0x00fc }, { char(0xfd), 0x00fd }, { char(0xfe), 0x00fe }, { char(0xff), 0x00ff },
    };
    using latin1 = codepage_encoding<latin1_codepage>;
} // namespace ogonek

#endif // OGONEK_ENCODING_LATIN1_HPP

